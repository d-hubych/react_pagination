{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","paginsLength","Math","ceil","pagins","handlePage","pager","className","classNames","disabled","href","onClick","map","page","active","items","App","useState","setPerPage","setCurrentPage","start","end","length","visibleItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"mMAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAeC,KAAKC,KAAKN,EAAQC,GACjCM,EAAmBd,EAAW,EAAGW,GAIjCI,EAAa,SAACC,GAClB,OAAQA,GACN,IAAK,OACEP,EAAc,EAAK,GACtBC,EAAaD,EAAc,GAG7B,MAEF,IAAK,OACEA,EAAc,GAAME,GACvBD,EAAaD,EAAc,GAG7B,MAEF,QACMO,IAAUP,GACZC,EAAaM,KAKrB,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBV,IAHhB,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QAAS,kBAAMN,EAAW,SAL5B,oBAWDD,EAAOQ,KAAI,SAAAC,GACV,OACE,oBAEEN,UAAWC,IACT,YACA,CAAEM,OAAQD,IAASd,IAJvB,SAOE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMN,EAAWQ,IAJ5B,SAMGA,KAbL,eACeA,OAkBnB,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUV,IAAgBE,IAHhC,SAME,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAC/BU,QAAS,kBAAMN,EAAW,SAL5B,wBCtFFU,G,MAAQzB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,OAEPsB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBoB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBoB,EAApB,KAEMC,EAAStB,EAAUC,EAAeD,EAClCuB,EAAQD,EAAQtB,GAAYiB,EAAMO,OACpCF,EAAQtB,EACRiB,EAAMO,OACJC,EAAeR,EAAMS,MAAMJ,EAAOC,GAExC,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCqB,EAAQ,EADzC,cACgDC,EADhD,eAC0DN,EAAMO,OADhE,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,MAAO5B,EACP6B,SAAU,SAACC,GACTT,EAAe,GACfD,GAAYU,EAAMC,OAAOH,QAP7B,UAUE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOkB,EAAMO,OACbxB,QAASA,EACTC,YAAaA,EACbC,aAAcmB,IAGhB,6BACGI,EAAaX,KAAI,SAAAmB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCxDlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b43627fd.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const paginsLength = Math.ceil(total / perPage);\n  const pagins: number[] = getNumbers(1, paginsLength);\n\n  type Pager = number | 'prev' | 'next';\n\n  const handlePage = (pager: Pager) => {\n    switch (pager) {\n      case 'prev':\n        if ((currentPage - 1) > 0) {\n          onPageChange(currentPage - 1);\n        }\n\n        break;\n\n      case 'next':\n        if ((currentPage + 1) <= paginsLength) {\n          onPageChange(currentPage + 1);\n        }\n\n        break;\n\n      default:\n        if (pager !== currentPage) {\n          onPageChange(pager);\n        }\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => handlePage('prev')}\n        >\n          «\n        </a>\n      </li>\n\n      {pagins.map(page => {\n        return (\n          <li\n            key={`page-${page}`}\n            className={classNames(\n              'page-item',\n              { active: page === currentPage },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => handlePage(page)}\n            >\n              {page}\n            </a>\n          </li>\n        );\n      })}\n\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === paginsLength },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === paginsLength}\n          onClick={() => handlePage('next')}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport { Pagination } from './components/Pagination';\nimport './App.css';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const start = (perPage * currentPage) - perPage;\n  const end = ((start + perPage) <= items.length)\n    ? start + perPage\n    : items.length;\n  const visibleItems = items.slice(start, end);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${start + 1} - ${end} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => {\n              setCurrentPage(1);\n              setPerPage(+event.target.value);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}